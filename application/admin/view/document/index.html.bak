 <!-- 头部 -->
	{include file='public/header'}
<!-- 头部 --> 
			<div class="content">
				<div class="tips_msg none"><span class="tips">保存成功</span><span class="close_tips"></span></div>
					<div class="edit_title">{$meta_title|default=""}</div>
                 <div class="search">
					<form class="search-form"  action="{:url()}" method="post">
					  <div class="group">
					       名称：<input type="text" name="title" class="search_ipt" value="{:input('title')}"/>
					  
					  </div>
						  <div class="group">
					     链接：<input type="text" name="url"  class="search_ipt" value="{:input('url')}"/>
					  </div>
					     <div class="group">
					     创建时间：<input type="text"  name="start_time" id="start_time" class="laydate-icon input_box search_ipt" value="{:input('start_time')}"/> 
					  </div>
					  <script>
					laydate({
					elem: '#start_time',
					format: 'YYYY-MM-DD hh:mm:ss', 
					min: laydate.now(), //设定最小日期为当前日期//目标元素。由于laydate.js封装了一个轻量级的选择器引擎，因此elem还允许你传入class、tag但必须按照这种方式 '#id .class'
					event: 'focus' //响应事件。如果没有传入event，则按照默认的click
					});
					</script>
                     <div class="group">
					     结束时间：<input type="text"  name="end_time" id="end_time" class="laydate-icon input_box search_ipt end" value="{:input('end_time')}"/><input type="button" class="search_btn"value="搜索" onclick="$('.search-form').submit()">
					  </div>
					  <script>
					laydate({
					  elem: '#end_time',
					  format: 'YYYY-MM-DD hh:mm:ss', 
					  min: laydate.now(), //设定最小日期为当前日期//目标元素。由于laydate.js封装了一个轻量级的选择器引擎，因此elem还允许你传入class、tag但必须按照这种方式 '#id .class'
					  event: 'focus' //响应事件。如果没有传入event，则按照默认的click
					});
                  </script>
					
					</form>
					</div>

					<div class="table">
					<div class="edit">
						<div class="edit_left ">
							<a href="{:url('add?pid='.$pid)}" class="add cur">新增</a>
							<a data-url="{:url('del')}" class="delete cur">删除</a>
						</div>
						<div class="search_right">
							<input type="text" />
							<div class="search_btn"></div>
						</div>
					</div>
					<table class="list_table">
					    <tr><th> <input class="checkbox check-all" type="checkbox">
											
                                                </th>
			<th>标题</th>
                
                    <th>所属分类</th>
					 <th>状态</th>
                       <th>创建时间</th>
		<th class="">操作</th>
				
                                            </tr>
				       {volist name="res.list" id="vo"}

                                            <tr class="even gradeC">
                                               <td> 
											<input class="ids row-selected" type="checkbox" name="id[]" value="{$vo.id}">
                                                </td>
									<td><a href="{:U('auth/edit?id='.$vo['id'])}">{$vo.title}</a> </td>
		
					
					  
					     <td>{$vo.category_id|get_category='title'}</td>
						 <td>{$vo.status}</td>
                           <td>{$vo.create_time|date="Y-m-d h:i",###}</td>
				
                           
			<td class="list_opr">
		
                                     <span class="opr_box">
									 <a href="{:url('edit?id='.$vo['id'])}" class="edit_btn cur">编辑</a>
									 <a data-url="{:url('del?id='.$vo['id'])}" class="del_btn cur">删除</a>
								
                                        </span>          
                </td>
                                            </tr>
											
										{/volist}
					</table>
					<!--分页-->
					<ul class="pagination">
						  {$res.page}
					</ul>
				</div>
				
			</div>
		</div>
	   <script>
			$(function(){
				initPage();
				window.onresize=function(){
					initPage();
				}
				bindEvent();
			});
			
			function initPage(){
				
				
				
				
			
			}
			
			function bindEvent(){
				$(".tree_menue_first span").on('click',function(){
					if($(this).parents(".tree_menue").hasClass("down")){
						$(this).parents(".tree_menue").removeClass("down").addClass("up");
						$(this).attr("class","folder_icon_on");
					}else{
						$(this).parents(".tree_menue").removeClass("up").addClass("down");
						$(this).fattr("class","folder_icon");
					}
					
				});
				$(".tree_menue_second").on("hover",function(){
					if(!$(this).hasClass("checked")){
						$(".nav_tree_list .tree_menue_second").parents(".tree_menue_second_group").find(".tree_menue_second").removeClass("checked");
						$(this).addClass("checked");
						$(this).parent().removeClass("up").addClass("down");
						if($(this).parents(".nav_tree_list").find("ul").is(':visible')){
						  $(this).parents(".nav_tree_list").find("ul").hide();
						}
						$(this).parent().find("ul").show();
					}else{
						//$(this).removeClass("checked");
					}
					
				});
				$(".tree_menue_third").on("hover",function(){
					if(!$(this).hasClass("checked")){
						$(".nav_tree_list .tree_menue_third").removeClass("checked");
						$(this).addClass("checked");
					}
				});
				$(".tab_option").click(function(){
					if(!$(this).hasClass("on")){
						var index = $(".tab_option").index($(this));
						$($(".edit_content_tab").get(index)).removeClass("none").siblings(".edit_content_tab").addClass("none");
						$(this).addClass("on").siblings().removeClass("on");
					}
					
				});
				
				/****树形菜单展开**/
				$(".first_level .folder_icon").click(function(){
					var parent= $(this).parents(".first_level_group").first();
					if(parent.hasClass("closed")){
						parent.removeClass("closed").addClass("opened");
					}else if(parent.hasClass("opened")){
						parent.removeClass("opened").addClass("closed");
						parent.find(".second_level_group").removeClass("opened").addClass("closed");
					}
					
				});
				$(".second_level .folder_icon").click(function(){
					var parent= $(this).parents(".second_level_group").first();
					if(parent.hasClass("closed")){
						parent.removeClass("closed").addClass("opened");
					}else if(parent.hasClass("opened")){
						parent.removeClass("opened").addClass("closed");
					}
					
				});
			}
			
			
			
		</script>	
		
	 <!-- 头部 -->
	{include file='public/footer'}
<!-- 头部 --> 

